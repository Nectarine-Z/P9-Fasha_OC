/**
 * @author : Francoise Zimmer
 * @date : 04-30-21
 * @description: classes that only contain code used for testing
 * 
 */


@isTest
public class orderTrigger_TEST {
    
    static testMethod void orderTriggerTest1() {
        Test.startTest();
        // Create an account :
        Account compteTestNouveauClient = new Account(name='nouveau client');
        
        insert compteTestNouveauClient;
        
        
        
        // create article in the PriceBook
        Product2 article = new Product2(Name = 'manteau', IsActive = true);
		insert article;
        
        
        // Pricebookentry creation
        PricebookEntry pbe = new PricebookEntry(Pricebook2Id = Test.getStandardPricebookId(), 
                                                Product2Id = article.Id, UnitPrice = 120, IsActive = true);
		insert pbe;
        
        
        //new contact creation:
       
        Contract contratNouveauClient = new Contract (AccountId = compteTestNouveauClient.id, 
                                                      Status = 'Draft', Startdate = date.today());
        insert contratNouveauClient;
        
       // new order creation 
        Order myorder = new Order(EffectiveDate = System.today(), Status ='Draft', AccountId =compteTestNouveauClient.id,Pricebook2Id=Test.getStandardPricebookId(),ShipmentCost__c=0);
        insert myorder;
        
        OrderItem oi = new OrderItem(OrderId=myorder.id,Quantity=10,PricebookEntryId=pbe.id,UnitPrice=150);
        insert oi;
        
        myorder.Status = 'Ordered';
        update myorder;
 
        
      
        BatchUpdateAccountCAOrdered b = new BatchUpdateAccountCAOrdered();
        Database.executeBatch(b,200);
        Test.stopTest();
        system.assertequals(1500, compteTestNouveauClient.Chiffre_d_affaire__c,'Chiffre_d_affaire__c should be 1500');
    }
}